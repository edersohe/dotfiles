# Helix GPT
[language-server.gpt]
command = "helix-gpt"

# Elixir
[[language]]
name = "elixir"
language-servers = ["elixir-ls", "gpt"]

[[language]]
name = "heex"
language-servers = ["elixir-ls", "tailwindcss-ls", "gpt"]

# Rust
[language-server.rust-analyzer.config.check]
command = "clippy"

[language-server.rust-analyzer.config.cargo]
features = "all"

[[language]]
name = "rust"
language-servers = ["rust-analyzer", "gpt"]

# Go
[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }
language-servers = ["gopls", "golangci-lint-lsp", "gpt"]

# PHP
[language-server.phpactor]
command = "phpactor"
args = ["language-server"]

[[language]]
name = "php"
language-servers = ["phpactor", "gpt"]

# SQL
[language-server.sql-language-server]
command = "sql-language-server"
args = ["up", "--method", "stdio"]

[[language]]
name = "sql"
language-servers = ["sql-language-server", "gpt"]

# Python
[language-server.basedpyright.config.python.analysis]
typeCheckingMode = "basic"

[language-server.ruff]
command = "ruff"
args = ["server"]

[[language]]
name = "python"
language-servers = ["pyright", "ruff", "gpt"]

# Ruby
[language-server.ruby-lsp]
command = "ruby-lsp"
config = { diagnostics = true, formatting = true }

[[language]]
name = "ruby"
language-servers = ["ruby-lsp", "gpt"]

# HTML, CCS, JavaScript, TypeScript, JSX, and TSX
[language-server]
biome = { command = "biome", args = ["lsp-proxy"] }

[[language]]
name = "javascript"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
  "tailwindcss-ls",
  "gpt",
]

[[language]]
name = "typescript"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
  "tailwindcss-ls",
  "gpt",
]

[[language]]
name = "jsx"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
  "tailwindcss-ls",
  "gpt",
]

[[language]]
name = "tsx"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
  "tailwindcss-ls",
  "gpt",
]

[[language]]
name = "html"
language-servers = [
  { name = "vscode-html-language-server", except-features = [
    "format",
  ] },
  "biome",
  "tailwindcss-ls",
  "gpt",
]

[[language]]
name = "css"
language-servers = [
  { name = "vscode-css-language-server", except-features = [
    "format",
  ] },
  "biome",
  "tailwindcss-ls",
  "gpt",
]

# JSON, TOML and YAML
[[language]]
name= "json"
language-servers = [
  { name = "vscode-json-language-server", except-features = [
    "format",
  ] },
  "biome",
  "gpt",
]

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
language-servers = ["taplo", "gpt"]

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true

[[language]]
name = "yaml"
language-servers = ["yaml-language-server", "gpt"]

# Markdown
[language-server.iwe]
command = "iwes"

[[language]]
name = "markdown"
language-servers = ["iwe", "gpt"]
auto-format = true
